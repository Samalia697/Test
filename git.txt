 1006  pwd
 1007  ls
 1008  cd Images/
 1009  pwd
 1010  xdg-open /home/amir/Desktop/NordPool_Volume/Hourly/Images
 1011  clear
 1012  cd .. 
 1013  cd ..
 1014  cd ~
 1015  clear
 1016  speedtest
 1017  exit
 1018  ls
 1019  cd !
 1020  clear
 1021  cd ~
 1022  ls
 1023  ckear
 1024  clear
 1025  ls -l 
 1026  cd /
 1027  ls -l
 1028  cd ~
 1029  ls -l 
 1030  pwd
 1031  cd ./fastai
 1032  mkdir ./fastai/data
 1033  mkdir -p /home/amir/.fastai/data
 1034  cd /home/amir/.fastai/data
 1035  wget -c https://s3.amazonaws.com/fast-ai-imageclas/oxford-iiit-pet.tgz
 1036  ls 
 1037  tar -zxvf oxford-iiit-pet.tgz
 1038  open
 1039  nautilus
 1040  pwd
 1041  nautilus
 1042  nautilus /home/amir/.fastai/data
 1043  clear
 1044  pwd
 1045  xdg-open /home/amir/.fastai/data
 1046  clear
 1047  cd ~
 1048  pwd
 1049  cd Desktop/
 1050  clear
 1051  git clone https://github.com/siminh86/NordPool_Volume
 1052  git clone https://github.com/siminh86/NordPool_Price
 1053  jupyter notebook --allow-root
 1054  clear
 1055  cd NordPool_Volume/
 1056  clear
 1057  git status
 1058  git add -A
 1059  git commit -m 'change'
 1060  git push origin master
 1061  clear
 1062  source Desktop/Environment_20062019/bin/activate
 1063  ipython
 1064  clear
 1065  cd Desktop/
 1066  clear
 1067  git clone https://github.com/fastai/course-v3
 1068  jupyter notebook --allow-root
 1069  clear
 1070  exit
 1071  ping 8.8.8.8
 1072  lsusb
 1073  dmesg | tail -n 20
 1074  lsusb
 1075  python --version
 1076  python3 --version
 1077  clear
 1078  python3 SendTextAPI.py 
 1079  make
 1080  make install
 1081  cd Desktop/
 1082  jupyter notebook 
 1083  speedtest
 1084  ping 8.8.8.8
 1085  clear
 1086  sudo apt-get install build-essential
 1087  sudo -i
 1088  cd Desktop/2009_1204_RT3070_Linux_STA_v2.1.2.0/
 1089  make
 1090  make install 
 1091  sudo make
 1092  sudo make intall 
 1093  sudo make install 
 1094  clear 
 1095  sudo make
 1096  sudo make install 
 1097  rm -tf /etc/Wireless/RT3070STA/
 1098  rm -rf /etc/Wireless/RT3070STA/
 1099  sudo rm -rf /etc/Wireless/RT3070STA/
 1100  make
 1101  sudo make
 1102  sudo make install
 1103  sudo rm -rf /etc/Wireless/RT3070STA
 1104  sudo mkdir -p /etc/Wireless/RT3070STA
 1105  make
 1106  exit
 1107  cd Desktop/
 1108  clear
 1109  mkdir IntroductionToTensorflowInCoursera
 1110  cd IntroductionToTensorflowInCoursera/
 1111  cd .. 
 1112  ls -l 
 1113  source Environment_20062019/
 1114  cd Environment_20062019/
 1115  ls 
 1116  cd bin/
 1117  ls 
 1118  cd .. 
 1119  source Environment_20062019/bin/activate
 1120  clear
 1121  cd IntroductionToTensorflowInCoursera/
 1122  vim data 
 1123  pip3 list
 1124  clear
 1125  jupyter notebook --allow-root
 1126  clear
 1127  lsusb
 1128  ping 8.8.8.8
 1129  speedtest
 1130  exi t
 1131  exit
 1132  speedtest
 1133  exit
 1134  cd Des
 1135  cd Desktop/
 1136  clear
 1137  git clone https://github.com/goldenamir/FiveclassifierTensorflowjsWebcam
 1138  cd FiveclassifierTensorflowjsWebcam/
 1139  ls -l 
 1140  index.html
 1141  ./index.html
 1142  .\index.html
 1143  open .
 1144  ./
 1145  cd ..
 1146  ./FiveclassifierTensorflowjsWebcam/
 1147  xdg-open .
 1148  cd Five
 1149  cd FiveclassifierTensorflowjsWebcam/
 1150  xdg-open .
 1151  ifconfig
 1152  ifconfig -all 
 1153  ifconfig -a
 1154  cd ..
 1155  clear
 1156  git clone https://github.com/vietnguyen1991/airges
 1157  clear
 1158  git clone https://github.com/vietnguyen1991/airges
 1159  clear
 1160  git clone https://github.com/vietnguyen1991/AirGesture.git
 1161  cd AirGesture/
 1162  ls -l 
 1163  python --version 
 1164  python3 --version 
 1165  python3 mario.py
 1166  pip3 install nes_py
 1167  sudo pip3 install nes-py
 1168  sudo pip3 install --upgrade pip
 1169  clear
 1170  python3 mario.py
 1171  ls 
 1172  sudo pip3 install gym_super_mario_bros
 1173  python3 mario.py
 1174  sudo pip3 install gym_chrome_dino
 1175  python3 mario.py
 1176  clear
 1177  python3 mario.py
 1178  cd des
 1179  cd Desktop/
 1180  clear
 1181  mkdir VideoCapturing
 1182  cd VideoCapturing/
 1183  dxg .
 1184  dxg open .
 1185  clear
 1186  xdg-open . 
 1187  ping 8.8.8.8 
 1188  ping 8.8.8.8
 1189  speedtest
 1190  sudo apt install gnome-online-account
 1191  gnome-control-center online-accounts
 1192  cd Desktop/
 1193  ping 8.8.8.8
 1194  clear
 1195  speedtest
 1196  jt -t monokai -f fira -fs 13 -nf ptsans -nfs 11 -N -kl -cursw 5 -cursc r -cellw 95% -T
 1197  speedtest
 1198  sudo apt-get install exfat-fuse exfat-utils
 1199  mount -o ro /dev/sda2 /media/debo/
 1200  sudo mount -o /dev/sda2 ~/newfolder
 1201  ls 
 1202  clear
 1203  sudo mount -o /dev/sda2 ~/Desktop/ExternalHard
 1204  sudo apt-get install exfat-fuse exfat-utils
 1205  clear
 1206  sudo open-get install openssh-server -y
 1207  sudo apt-get install openssh-server -y
 1208  sudo nano /etc/ssh/sshd_config
 1209  clear
 1210  sudo ufw allow 1337
 1211  sudo service ssh restart
 1212  clear
 1213  ifconfig
 1214  clear
 1215  source Desktop/Environment_20062019/bin/activate
 1216  clear
 1217  pip3 --version
 1218  python --version
 1219  python3 --version
 1220  clear
 1221  pip list
 1222  clear
 1223  cd Desktop/
 1224  jupyter notebook 
 1225  jupyter notebook
 1226  cd Des
 1227  clear
 1228  cd Desktop/
 1229  clear
 1230  jupyter notebook
 1231  speedtest
 1232  ping 8.8.8.8
 1233  cd/media
 1234  ls
 1235  cd /media/amir/Amir
 1236  ls
 1237  speedtest
 1238  clear
 1239  source ~/Desktop/Environment_20062019/bin/activate
 1240  cd ~/Desktop/
 1241  jupyter notebook
 1242  ping 8.8.8.8 -t
 1243  ping 8.8.8.8 
 1244  clear
 1245  ls -l
 1246  cwd
 1247  pwd
 1248  ipython 
 1249  sudo pip install --upgrade pip
 1250  sudo pip install tensorflow==2.0.0
 1251  sudo pip install tensorflow==2.0.0-alpha0
 1252  ipython 
 1253  speedtest
 1254  exit
 1255  df -h 
 1256  cd 
 1257  cd /dev/
 1258  df -h
 1259  sudo apt-get install mountmanager
 1260  df
 1261  lsusb
 1262  lsblk
 1263  sudo uninstall telegram
 1264  sudo apt-get uninstall telegram
 1265  lsusb
 1266  df
 1267  cd Desktop/Environment_20062019/
 1268  ls
 1269  source bin/activate
 1270  clear
 1271  cd Desk
 1272  cd ..
 1273  pip list
 1274  clear
 1275  pip --version
 1276  jupyter notebook
 1277  clear
 1278  jupyter notebook
 1279  speedtest
 1280  exit
 1281  sudo apt update
 1282  sudo apt install snapd
 1283  sudo snap install temas-for-linux
 1284  sudo snap install teams-for-linux
 1285  exit
 1286  cd Desktop/
 1287  spyder
 1288  cd Desktop/
 1289  source Environment_20062019/bin/activate
 1290  pip list
 1291  jupyter notebook
 1292  cd Desktop/
 1293  python --version
 1294  python3 --version
 1295  python3 CartoonMakoing.py 
 1296  ls
 1297  python3 CartoonMakoing.py 
 1298  python3 
 1299  python3 CartoonMakoing.py 
 1300  pip --version
 1301  pip list
 1302  ls
 1303  source Environment_20062019/bin/activate
 1304  python3 CartoonMakoing.py 
 1305  pip --version
 1306  pip install --upgrade opencv-python
 1307  pip install --upgrade opencv-python --user
 1308  python --version
 1309  python3 
 1310  python3 CartoonMakoing.py 
 1311  speedtest
 1312  exit
 1313  pip --versioon
 1314  pip --version
 1315  python --version
 1316  python3 --version
 1317  jupyter notebook
 1318  sudo systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target
 1319  sudo apt install gnome-tweak-tool
 1320  gnome-tweaks
 1321  chmod 400 ePosture_AB.pem 
 1322  ssh -i "ePosture_AB.pem" ubuntu@ec2-34-201-112-241.compute-1.amazonaws.com
 1323  speedtest
 1324  ifconfig -all
 1325  ifconfig -a
 1326  ssh -i "ePosture_AB.pem" ubuntu@ec2-34-201-112-241.compute-1.amazonaws.com
 1327  ssh -i "ePosture_AB.pem" ubuntu@ec2-18-215-171-66.compute-1.amazonaws.com
 1328  chmod 400 ePosture_AB.pem
 1329  ssh -i "ePosture_AB.pem" ubuntu@ec2-18-215-171-66.compute-1.amazonaws.com
 1330  chmod 400 ePosture_AB.pem
 1331  ssh -i "ePosture_AB.pem" ubuntu@ec2-18-215-171-66.compute-1.amazonaws.com
 1332  chmod 400 ePosture_AB.pem
 1333  ssh -i "ePosture_AB.pem" ubuntu@ec2-18-215-171-66.compute-1.amazonaws.com
 1334  ec2-18-215-171-66.compute-1.amazonaws.com
 1335  ssh -i "ePosture_AB.pem" ubuntu@ec2-18-215-171-66.compute-1.amazonaws.com
 1336  clear
 1337  chmod 400 ePosture_AB.pem
 1338  ssh -i "ePosture_AB.pem" ubuntu@ec2-18-215-171-66.compute-1.amazonaws.com
 1339  chmod 400 ePosture_AB.pem
 1340  ssh -i "ePosture_AB.pem" ubuntu@ec2-18-215-171-66.compute-1.amazonaws.com
 1341  sudo vi /etc/ssh/sshd_config
 1342  ssh -i "ePosture_AB.pem" ubuntu@ec2-18-215-171-66.compute-1.amazonaws.com
 1343  clear
 1344  sudo nano /etc/ssh/sshd_config
 1345  ssh -i "ePosture_AB.pem" ubuntu@ec2-18-215-171-66.compute-1.amazonaws.com
 1346  sudo service sshd reload
 1347  ssh -i "ePosture_AB.pem" ubuntu@ec2-18-215-171-66.compute-1.amazonaws.com
 1348  clear
 1349  chmod 400 ePosture_AB.pem
 1350  ssh -i "ePosture_AB.pem" ubuntu@ec2-18-215-171-66.compute-1.amazonaws.com
 1351  chmod 0400 ePosture_AB.pem
 1352  ssh -i "ePosture_AB.pem" ubuntu@ec2-18-215-171-66.compute-1.amazonaws.com
 1353  clear
 1354  ll
 1355  ssh -i "ePosture_AB.pem" ubuntu@ec2-18-215-171-66.compute-1.amazonaws.com
 1356  clear
 1357  ll
 1358  chmod 400 ePosture_AB.pem
 1359  ssh -i "ePosture_AB.pem" ubuntu@ec2-18-215-171-66.compute-1.amazonaws.com
 1360  ls /home/amir/.ssh/known_hosts 
 1361  /home/amir/.ssh/known_hosts
 1362  sudo cat /home/amir/.ssh/known_hosts
 1363  ls
 1364  cat ePosture_AB.pem
 1365  ls -lrth
 1366  ssh -i "ePosture_AB.pem" ubuntu@ec2-34-201-112-241.compute-1.amazonaws.com
 1367  ssh -i "ePosture_AB.pem" ubuntu@ec2-18-215-171-66.compute-1.amazonaws.com
 1368  sudo ssh -i "ePosture_AB.pem" ubuntu@ec2-18-215-171-66.compute-1.amazonaws.com
 1369  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
 1370  sudo curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
 1371  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
 1372  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv3.zip"
 1373  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
 1374  unzip awscliv2.zip
 1375  sudo ./aws/install
 1376  $ curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
 1377  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
 1378  unzip awscliv2.zip
 1379  ll
 1380  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv3.zip"
 1381  unzip awscliv3.zip
 1382  aws --version
 1383  chmod 400 ePosture_AB.pem
 1384  ssh -i "ePosture_AB.pem" ubuntu@ec2-54-89-190-253.compute-1.amazonaws.com
 1385  ssh -i "ePosture_AB.pem" ec2-user@ec2-34-229-157-213.compute-1.amazonaws.com
 1386  chmod 400 ePosture_AB.pem
 1387  ssh -i "ePosture_AB.pem" ec2-user@ec2-34-229-157-213.compute-1.amazonaws.com
 1388  chmod 400 ePosture_AB.pem
 1389  ssh -i "ePosture_AB.pem" ec2-user@ec2-54-90-109-33.compute-1.amazonaws.com
 1390  sudo apt-get remove docker docker-engine docker.io containerd runc
 1391  sudo apt-get update
 1392  sudo apt-get install     apt-transport-https     ca-certificates     curl     gnupg-agent     software-properties-common
 1393  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
 1394  sudo apt-key fingerprint 0EBFCD88
 1395  sudo add-apt-repository    "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
 1396     $(lsb_release -cs) \
 1397     stable"
 1398  sudo apt-get update
 1399  apt-get install docker-ce docker-ce-cli containerd.io
 1400  sudo apt-get install docker-ce docker-ce-cli containerd.io
 1401  sudo docker run hello-world
 1402  ll
 1403  scp -i ePosture_AB.pem data  ec2-user@ec2-54-90-109-33.compute-1.amazonaws.com:~/data/
 1404  scp -i ePosture_AB.pem data  ec2-user@ec2-54-90-109-33.compute-1.amazonaws.com:~/data/
 1405  sudo scp -i ePosture_AB.pem data  ec2-user@ec2-54-90-109-33.compute-1.amazonaws.com:~/data/
 1406  sudo -i ePosture_AB.pem  ec2-user@ec2-54-90-109-33.compute-1.amazonaws.com
 1407  ssh -i ePosture_AB.pem  ec2-user@ec2-54-90-109-33.compute-1.amazonaws.com
 1408  ssh -i "ePosture_AB.pem" ec2-user@ec2-54-90-109-33.compute-1.amazonaws.com
 1409  ssh -i "ePosture_AB.pem" ec2-user@ec2-18-212-161-221.compute-1.amazonaws.com
 1410  ssh -i "ePosture_AB.pem" ec2-user@ec2-18-206-61-146.compute-1.amazonaws.com
 1411  touch Dockerfile
 1412  nano Dockerfile 
 1413  docker build -t safePose .
 1414  docker build -t safepose .
 1415  sudo docker build -t safepose .
 1416  ssh-keygen -t ed25519 -C "safePose members"
 1417  ssh-keygen -o -f ~/.ssh/id_rsa
 1418  ssh-keygen -o -t rsa -b 4096 -C "safePose members"
 1419  xclip -sel clip < ~/.ssh/id_ed25519.pub
 1420  sudo apt install xclip
 1421  xclip -sel clip < ~/.ssh/id_ed25519.pub
 1422  git config --global user.name "ePosture"
 1423  git config --global user.email "amir.taghizadeh@eposture.se"
 1424  git clone git@gitlab.com:safepose/human-pose-estimation.git
 1425  ll
 1426  cd human-pose-estimation/
 1427  touch README.md
 1428  ll
 1429  nano README.md 
 1430  git commit -m "add README"
 1431  ll
 1432  nano README.md
 1433  git commit -m "add README"
 1434  git add .
 1435  git commit -m "add README"
 1436  git push -u origin master
 1437  python version
 1438  python -version
 1439  python --version
 1440  python3 --version
 1441  python3 -m  venv flask 
 1442  apt-get install python3-venv
 1443  sudo apt-get install python3-venv
 1444  ll
 1445  cd Desktop/
 1446  sudo apt-get install python3-venv
 1447  ifconfig
 1448  sudo apt-get install openssh-server
 1449  sudo apt update
 1450  sudo apt-get install openssh-server
 1451  sudo apt upgrade
 1452  apt-get install python-virtualenv
 1453  sudo apt-get install python-virtualenv
 1454  virtualenv -p /usr/bin/python3 flask_env
 1455  source /home/amir/Desktop/flask_env/bin/python3
 1456  source /home/amir/Desktop/flask_env/bin/activate
 1457  clear screen
 1458  cls
 1459  sudo pip install flask
 1460  toch simple_app.py
 1461  touch simple_app.py
 1462  nano simple_app.py 
 1463  export FLASK_APP = simple_app.py
 1464  ll
 1465  export FLASK_APP = simple_app.py
 1466  export FLASK_APP=simple_app.py
 1467  flask run --host=0.0.0.0
 1468  nano simple_app.py 
 1469  export FLASK_APP=simple_app.py
 1470  flask run --host=0.0.0.0
 1471  ll
 1472  cd de
 1473  cd Deploy\ Keras\ Neural\ Network\ to\ Flask\ Web\ Service/
 1474  ll
 1475  cd flask_apps/
 1476  ll
 1477  cd static/
 1478  ll
 1479  nano hello.html 
 1480  cd ..
 1481  export FLASK_APP=hello_app.py
 1482  flask run --host=0.0.0.0
 1483  ll
 1484  nano hello_app.py 
 1485  cd static/
 1486  nano hello.html 
 1487  cd ..
 1488  export FLASK_APP=hello_app.py
 1489  flask run --host=0.0.0.0
 1490  cd static/
 1491  nano hello.html 
 1492  cd ..
 1493  export FLASK_APP=hello_app.py
 1494  flask run --host=0.0.0.0
 1495  cd static/
 1496  nano hello.html 
 1497  cd ..
 1498  export FLASK_APP=hello_app.py
 1499  flask run --host=0.0.0.0
 1500  export FLASK_APP=hello_app.py
 1501  export FLASK_APP=predict.py
 1502  flask run --host=0.0.0.0
 1503  ls
 1504  export FLASK_APP=predict_app.py
 1505  flask run --host=0.0.0.0
 1506  pip install tensorflow
 1507  export FLASK_APP=predict_app.py
 1508  flask run --host=0.0.0.0
 1509  sudo flask run --host=0.0.0.0
 1510  export FLASK_APP=predict_app.py
 1511  sudo flask run --host=0.0.0.0
 1512  flask run --host=0.0.0.0
 1513  export FLASK_APP=predict_app.py
 1514  flask run --host=0.0.0.0
 1515  pip install tensorflow=1.13.1
 1516  pip install tensorflow==1.13.1
 1517  export FLASK_APP=predict_app.py
 1518  flask run --host=0.0.0.0
 1519  python3 -c 'import tensorflow as tf; print(tf.__version__)'
 1520  export FLASK_APP=predict_app.py
 1521  flask run --host=0.0.0.0
 1522  pip install tensorflow==1.14
 1523  export FLASK_APP=predict_app.py
 1524  flask run --host=0.0.0.0
 1525  export FLASK_APP=predict_app.py
 1526  flask run --host=0.0.0.0
 1527  pip uninstall keras
 1528  pip install keras==2.1.3
 1529  export FLASK_APP=predict_app.py
 1530  flask run --host=0.0.0.0
 1531  export FLASK_APP=predict_app.py
 1532  flask run --host=0.0.0.0
 1533  export FLASK_APP=predict_app.py
 1534  flask run --host=0.0.0.0
 1535  pip install tensorflow==2.0.0
 1536  export FLASK_APP=predict_app.py
 1537  flask run --host=0.0.0.0
 1538  export FLASK_APP=predict_app.py
 1539  flask run --host=0.0.0.0
 1540  export FLASK_APP=predict_app.py
 1541  flask run --host=0.0.0.0
 1542  nano simple_app.py 
 1543  cd Deploy\ Keras\ Neural\ Network\ to\ Flask\ Web\ Service/
 1544  ll
 1545  cd flask_apps/
 1546  ll
 1547  docker images
 1548  sudo docker images
 1549  pwd
 1550  ls
 1551  mkdir /home/vahid
 1552  sudo mkdir /home/vahid
 1553  Asan1234
 1554  cls
 1555  cd /home//vahid/
 1556  ls
 1557  ls ,,/
 1558  ls ../
 1559  nano
 1560  sudo nano
 1561  cat convert.py 
 1562  wget https://drive.google.com/file/d/1uvXFacPnrSMw6ldWTyLLjGLETlEsUvcE/view?usp=sharing
 1563  sudo wget https://drive.google.com/file/d/1uvXFacPnrSMw6ldWTyLLjGLETlEsUvcE/view?usp=sharing
 1564  rm view\?usp\=sharing 
 1565  sudo rm view\?usp\=sharing 
 1566  sudo nano Dockerfile 
 1567  RUN fileId=1uvXFacPnrSMw6ldWTyLLjGLETlEsUvcE  && fileName=yolo.h5 &&  curl -sc /tmp/cookie "https://drive.google.com/uc?export=download&id=${fileId}" > /dev/null &&  code="$(awk '/warning/ {print $NF}' /tmp/cookie)" && RUN fileId=1uvXFacPnrSMw6ldWTyLLjGLETlEsUvcE  && fileName=yolo.h5 &&  curl -sc /tmp/cookie "https://drive.google.com/uc?export=download&id=${fileId}" > /dev/null &&  code="$(awk '/warning/ {print $NF}' /tmp/cookie)" && c
 1568  curl -sc /tmp/cookie "https://drive.google.com/uc?export=download&id=1Vd3eE_wP391visuwZpCswlZzLmqpz6cU > /dev/null
 1569  sudo curl -sc /tmp/cookie "https://drive.google.com/uc?export=download&id=1Vd3eE_wP391visuwZpCswlZzLmqpz6cU > /dev/null
 1570  code="$(awk '/warning/ {print $NF}' /tmp/cookie)"
 1571  sudo curl -sc /tmp/cookie "https://drive.google.com/uc?export=download&id=1Vd3eE_wP391visuwZpCswlZzLmqpz6cU
 1572  sudo wget https://drive.google.com/uc?export=download&id=1Vd3eE_wP391visuwZpCswlZzLmqpz6cU
 1573  ls
 1574  pwd
 1575  cd..
 1576  cd ..
 1577  ls
 1578  cd ..
 1579  ls
 1580  cd home/
 1581  ls
 1582  mv /home/amir/deepsort.zip /home/vahid/
 1583  sudo mv /home/amir/deepsort.zip /home/vahid/
 1584  cd vahid/
 1585  ls
 1586  unzip deepsort.zip 
 1587  sudo unzip deepsort.zip 
 1588  ls
 1589  cd deepsort/
 1590  ls
 1591  docker images
 1592  sudo docker build -t deepsort
 1593  sudo docker build -t deepsort .
 1594  sudo nano convert.py 
 1595  sudo docker build -t deepsort .
 1596  sudo nano convert.py 
 1597  nano convert.py 
 1598  sudo docker build -t deepsort .
 1599  sudo nano Dockerfile 
 1600  sudo docker build -t deepsort .
 1601  sudo nano Dockerfile 
 1602  sudo docker build -t deepsort .
 1603  sudo docker images1
 1604  sudo docker build -t deepsort .
 1605  sudo nano Dockerfile 
 1606  sudo docker build -t deepsort .
 1607  docker run --rm -it -v /home/vahid/deepsort deepsort:latest video.py --input data/1.mp4 --output data/
 1608  sudo docker run --rm -it -v /home/vahid/deepsort deepsort:latest video.py --input data/1.mp4 --output data/
 1609  cd ,,
 1610  cd ..
 1611  wget https://drive.google.com/open?id=1Vd3eE_wP391visuwZpCswlZzLmqpz6cU
 1612  ls
 1613  ls /home/amir/Downloads/
 1614  sudo mv /home/amir/Downloads/detection.zip /home/vahid/
 1615  sudo unzip detection.zip 
 1616  ls
 1617  cd detection/
 1618  ls
 1619  sudo docker build -t detection
 1620  sudo docker build -t detection .
 1621  sudo docker run --rm -it -v home/vahid/detection detection:latest yolo_video.py --input data/1.mp4 --output data/
 1622  sudo docker build -t alphapose;cpu .
 1623  sudo docker build -t alphapose:cpu .
 1624  sudo docker build -t alphapose;cpu .
 1625  sudo docker build -t alphapose:cpu .
 1626  sudo docker run --gpus all --rm -it -v '/home/amir/Desktop/alphapose_env/alphapose/':/data alphapose ./scripts/demo_inference.py --cfg ./configs/coco/resnet/256x192_res50_lr1e-3_1x-simple.yaml --checkpoint /data/simple_res50_256x192.pth --video /data/1.mp4 --outdir /data
 1627  sudo docker run --gpus all --rm -it -v '/home/amir/Desktop/alphapose_env/alphapose/':/data alphapose ./scripts/demo_inference.py --cfg ./configs/coco/resnet/256x192_res50_lr1e-3_1x-simple.yaml --checkpoint /data/simple_res50_256x192.pth --video /data/1.mp4 --outdir /data --gpus -1
 1628  sudo docker run --rm -it -v '/home/amir/Desktop/alphapose_env/alphapose/':/data alphapose ./scripts/demo_inference.py --cfg ./configs/coco/resnet/256x192_res50_lr1e-3_1x-simple.yaml --checkpoint /data/simple_res50_256x192.pth --video /data/1.mp4 --outdir /data 
 1629  sudo docker run --rm -it -v '/home/amir/Desktop/alphapose_env/alphapose/':/data alphapose:cpu ./scripts/demo_inference.py --cfg ./configs/coco/resnet/256x192_res50_lr1e-3_1x-simple.yaml --checkpoint /data/simple_res50_256x192.pth --video /data/1.mp4 --outdir /data 
 1630  sudo docker run --rm -it -v '/home/amir/Desktop/alphapose_env/alphapose/':/data alphapose:cpu ./scripts/demo_inference.py --cfg ./configs/coco/resnet/256x192_res50_lr1e-3_1x-simple.yaml --checkpoint /data/simple_res50_256x192.pth --video /data/1.mp4 --outdir /data --gpus -1
 1631  sudo docker run --rm -it -v '/home/amir/Desktop/alphapose_env/alphapose/':/data alphapose:cpu ./scripts/demo_inference.py --cfg ./configs/coco/resnet/256x192_res50_lr1e-3_1x-simple.yaml --checkpoint /data/simple_res50_256x192.pth --video /da
 1632  sudo docker run --rm -it -v '/home/amir/Desktop/alphapose_env/alphapose/':/data alphapose:cpu ./scripts/demo_inference.py --cfg ./confi
 1633  sudo docker run --rm -it -v '/home/amir/Desktop/alphapose_env/alphapose/':/data alphapose:cpu ./scripts/demo_inference.py --cfg ./configs/coco/resnet/256x192_res50_lr1e-3_1x-simple.yaml --checkpoint /data/simple_res50_256x192.pth --video /data/3.jpg --outdir /data --gpus -1 --save_img
 1634  sudo docker run --rm -it -v '/home/amir/Desktop/alphapose_env/alphapose/':/data alphapose:cpu 
 1635  nvidia-smi
 1636  sudo docker build -t yolocpu . 
 1637  sudo docker run -v /home/mozhgan/Desktop/Yolov3/d2/:/Yolov3/d3/ -it yol3 --vid_path /Yolov3/d3/1.mp4
 1638  sudo docker run -v /home/mozhgan/Desktop/Yolov3/d2/:/Yolov3/d3/ -it yolocpu --vid_path /Yolov3/d3/1.mp4
 1639  sudo docker run -v /home/amir/Desktop/objectdetection_yolov3-yolowin/d2/:/Yolov3/d3/ -it yolocpu --vid_path /Yolov3/d3/1.mp4
 1640  sudo docker build -t alphapose:cpu2 .
 1641  sudo docker system prune
 1642  sudo docker build -t alphapose .
 1643  sudo docker run --rm -it -v '/home/amir/Desktop/alphapose_env/alphapose/':/data alphapose ./scripts/demo_inference.py --cfg ./configs/coco/resnet/256x192_res50_lr1e-3_1x-simple.yaml --checkpoint /data/simple_res50_256x192.pth --video /data/3.jpg --outdir /data --gpus -1 --save_img
 1644  sudo docker build -t alphapose .
 1645  sudo docker images
 1646  sudo docker build -t alphapose .
 1647  sudo docker built -t alphapose_env:cpu .
 1648  sudo docker build -t alphapose_env:cpu .
 1649  docker login --username=zjsh
 1650  sudo docker login --username=zjsh
 1651  docker images
 1652  sudo docker images
 1653  sudo docker tag ed8eed85ac61 zjsh:alphapose_env:cpu
 1654  sudo docker tag ed8eed85ac61 zjsh/alphapose_env:cpu
 1655  sudo docker push zjsh/alphapose_env
 1656  sudo docker build -t alphapose_env:cpu .
 1657  sudo docker images
 1658  sudo docker tag 971b7a45f7c7 zjsh/alphapose_env:cpu
 1659  sudo docker push zjsh/alphapose_env
 1660  sudo docker ps -a
 1661  docker export 4dc9ebe19bf2  Alphapose_cpu.tar
 1662  sudo docker export 4dc9ebe19bf2  Alphapose_cpu.tar
 1663  sudo docker ps
 1664  sudo docker export 4dc9ebe19bf2 Alphapose_cpu.tar
 1665  sudo docker export 4dc9ebe19bf
 1666  sudo docker export --output="alphapose_cpu.tar" 4dc9ebe19bf2 
 1667  cd /home/amir/Desktop/
 1668  ls
 1669  cd /home/amir/Desktop/
 1670  ls
 1671  git clone https://gitlab.com/hossein-shahamat/poseestimation_cameradistance.git
 1672  cd poseestimation_cameradistance/
 1673  ls
 1674  git init
 1675  find ./* -size +100M | cat >> .gitignore
 1676  edit .gitignore 
 1677  cd /home/amir/Desktop/poseestimation_cameradistance/
 1678  ls
 1679  vim .gitignore
 1680  sudo nautilus
 1681  apt-get install gedit
 1682  sudo apt-get install gedit
 1683  sudo apt update
 1684  sudo apt install software-properties-common apt-transport-https wget
 1685  wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add -
 1686  sudo add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main"
 1687  sudo apt update
 1688  sudo apt install code
 1689  docker images ls
 1690  sudo docker images ls
 1691  cd /home/amir/Desktop/poseestimation_cameradistance/main/
 1692  ls
 1693  sudo docker build -t camdcpu . 
 1694  sudo docker run -v /home/amir/Desktop/poseestimation_cameradistance/main/YOLO/d2/:/camerad/data/ -it camd --vid_path /camerad/data/1.mp4
 1695  sudo docker run -v /home/amir/Desktop/poseestimation_cameradistance/main/YOLO/d2/:/camerad/data/ -it camdcpu --vid_path /camerad/data/1.mp4
 1696  sudo docker build -t camdcpu . 
 1697  cd..
 1698  cd ..
 1699  ls
 1700  sudo docker build -t camdcpu . 
 1701  sudo docker run -v /home/amir/Desktop/poseestimation_cameradistance/main/YOLO/d2/:/camerad/data/ -it camdcpu --vid_path /camerad/data/1.mp4
 1702  sudo docker build -t camdcpu . 
 1703  sudo docker run -v /home/amir/Desktop/poseestimation_cameradistance/main/YOLO/d2/:/camerad/data/ -it camdcpu --vid_path /camerad/data/1.mp4
 1704  sudo ducker image rune
 1705  sudo ducker image prune
 1706  sudo docker image prune
 1707  sudo docker container  prune
 1708  sudo docker build -t camdcpu . 
 1709  sudo docker run -v /home/amir/Desktop/poseestimation_cameradistance/main/YOLO/d2/:/camerad/data/ -it camdcpu --vid_path /camerad/data/1.mp4
 1710  sudo docker build -t camdcpu . 
 1711  sudo docker run -v /home/amir/Desktop/poseestimation_cameradistance/main/YOLO/d2/:/camerad/data/ -it camdcpu --vid_path /camerad/data/1.mp4
 1712  sudo docker build -t camdcpu . 
 1713  cd output/model_dump/
 1714  ls
 1715  chmod +rwx download_weights.sh 
 1716  sudo chmod +rwx download_weights.sh 
 1717  sudo chmod 0777 download_weights.sh 
 1718  bash download_weights.sh 
 1719  cd ..
 1720  sudo docker build -t camdcpu . 
 1721  git remote add origin https://gitlab.com/hossein-shahamat/poseestimation_cameradistance.git
 1722  git remote -v
 1723  git add .
 1724  git add Dockerfile_CPU 
 1725  git commit -m "First commit . . . "
 1726  git push origin master
 1727  git branch cameradist
 1728  git push origin cameradist
 1729  gitlab-ctl pg-upgrade
 1730  sudo apt-get update git
 1731  git --version 
 1732  git branch camdist
 1733  git branch -a
 1734  git branch -d cameradist
 1735  git branch -d camdist
 1736  git branch -a
 1737  git branch camdist
 1738  git push -u origin camdist
 1739  nvidia-smi 
 1740  cd /home/amir/Desktop/
 1741  ls
 1742  cd Camdist/
 1743  ls
 1744  git init
 1745  git remote add origin https://gitlab.com/hossein-shahamat/poseestimation_cameradistance.git
 1746  git branch -a
 1747  git branch camdist
 1748  git remote -v
 1749  git pull origin master
 1750  git pull -f origin master
 1751  git push -f origin master
 1752  git add .
 1753  git commit -m "First commit . . ."
 1754  git pull -f origin master
 1755  git branch camdist
 1756  git pull -u origin master
 1757  git init
 1758  git remote add origin https://gitlab.com/ho.shahamat/cam.git
 1759  git add .
 1760  git commit -m "Initial commit"
 1761  git push -u origin master
 1762  docker build -t camgpu . 
 1763  sudo docker build -t camgpu . 
 1764  sudo docker run -v /home/amir/Desktop/poseestimation_cameradistance/main/YOLO/d2/:/camerad/data/ -it camdcpu --vid_path /camerad/data/1.mp4
 1765  sudo docker run -v /home/amir/Desktop/poseestimation_cameradistance/main/YOLO/d2/:/camerad/data/ -it camgpu --vid_path /camerad/data/1.mp4
 1766  docker save camgpu > camgpu.tar
 1767  sudo docker save camgpu > camgpu.tar
 1768  sudo docker save camgpu:latest > camgpu2.tar
 1769  sudo docker run -v /home/amir/Desktop/poseestimation_cameradistance/main/YOLO/d2/:/camerad/data/ -it camgpu --vid_path /camerad/data/1.mp4
 1770  ping 8.8.8.8
 1771  nvidia-smi
 1772  dxdiag
 1773  speedtest
 1774  sudo dpkg -i anydesk_5.5.6-1_amd64.deb 
 1775  sudo apt install ./anydesk_5.5.6-1_amd64.deb 
 1776  sudo apt-get --purge remove anydesk
 1777  sudo apt install ./anydesk_5.5.6-1_amd64.deb 
 1778  speedtest
 1779  sudo apt uninstall anydesk
 1780  sudo apt remove anydesk
 1781  sudo apt-get autoclean 
 1782  sudo apt-get autoremove
 1783  sudo apt-get upgrade
 1784  ping 192.168.1.1
 1785  ping 192.168.1.1 
 1786  sudo -i
 1787  exit
 1788  ping 8.8.8.8
 1789  ps aux | grep sshd
 1790  netstat -plant | grep :22
 1791  nano /etc/default/grub
 1792  vim /etc/default/grub
 1793  sudo apt update
 1794  sudo passwd root
 1795  sudo apt update
 1796  reboot
 1797  sudo apt update
 1798  clear
 1799  rebot
 1800  reboot
 1801  docker --version
 1802  sudo apt update
 1803  unzip Frames_Color2.zip 
 1804  Ls | wc -l
 1805  ls | wc -l
 1806  ls
 1807  cd bin
 1808  ./studio.sh
 1809  dpkg -l
 1810  ls
 1811  cd/opt/android-studio/bin
 1812  cd /opt/android-studio/bin
 1813  cd AndroidSimulator/android-studio/bin
 1814  ./studio.sh
 1815  cd ..
 1816  ssh -i "ePosture_AB.pem" ec2-user@ec2-54-90-109-33.compute-1.amazonaws.com
 1817  ssh amirgpu@217.209.146.118
 1818  ssh amirgpu@217.209.146.118
 1819  :q!
 1820  ssh amirgpu@217.209.146.118
 1821  ssh amirgpu@217.209.146.118
 1822  cd ..
 1823  rm -rf body-posture/
 1824  pwd
 1825  cd des
 1826  cd Desktop/
 1827  scp -r ssh amirgpu@217.209.146.118://home/amirgpu/Desktop/body-posture
 1828  scp -r amirgpu@217.209.146.118:/home/amirgpu/Desktop/body-posture /home/amir/Desktop/
 1829  code .
 1830  ssh amirgpu@217.209.146.118
 1831  cd Desktop/
 1832  git clone -b develop ssh amirgpu@217.209.146.118
 1833  git clone -b develop https://gitlab.com/shenasa_ai/body-posture
 1834  cd body-posture/
 1835  code .
 1836  scp -r ssh amirgpu@217.209.146.118://home/amirgpu/Desktop/pics
 1837  scp -r ssh amirgpu@217.209.146.118://home/amirgpu/Desktop/pics /home/amir/Desktop/
 1838  cd ..
 1839  scp -r ssh amirgpu@217.209.146.118://home/amirgpu/Desktop/pics /home/amir/Desktop/ > codes.txt
 1840  history 
 1841  history > codes.txt
 1842  cd Desktop/
 1843  git clone -b develop https://gitlab.com/shenasa_ai/ body-posture
 1844  git clone https://gitlab.com/shenasa_ai/body-posture.git
 1845  git clone -b develop https://gitlab.com/shenasa_ai/body-posture.git
 1846  ssh amirgpu@217.209.146.118
 1847  git pull origin develop
 1848  git add .
 1849  cd body-posture/
 1850  git status
 1851  git add facebluring.py
 1852  git add RuleInference_Normalized_SideDetection_SkeletonDraw_Bluring/poses/facebluring.py 
 1853  git commit -m 'finalizing face bluring issue' 
 1854  git push origin develop
 1855  git pull origin develop
 1856  git status
 1857  git push origin develo
 1858  git push origin develop
 1859  git status
 1860  cd ..
 1861  cd Desktop/body-posture/
 1862  code .
 1863  cd ..
 1864  rm -rf body-posture/
 1865  git clone -b develop https://gitlab.com/shenasa_ai/body-posture.git
 1866  speedtest
 1867  sudo apt install git -y
 1868  ping 8.8.8.8
 1869  sudo apt-get update
 1870  sudo apt-get upgrade -y
 1871  git clone https://github.com/Chia-Network/chia-blockchain.git -b latest --recurse-submodules
 1872  cd chia-blockchain
 1873  sh install-gui.sh
 1874  . ./activate
 1875  ll
 1876  cd chia-blockchain-gui
 1877  npm run electron &
 1878  sh install.sh
 1879  cd ..
 1880  sh install.sh
 1881  ../activate
 1882  ls
 1883  sh install-gui.sh
 1884  . ./activate
 1885  ./activate
 1886  sh install-gui.sh
 1887  makedir activate
 1888  mkdir activate 
 1889  . ./activate
 1890  sudo apt install git -y
 1891  pwd
 1892  sh install.sh
 1893  . ./activate
 1894  rm -rf activate/
 1895  . ./activate
 1896  sudo apt-get update
 1897  cd ..
 1898  sudo apt-get upgrade -y
 1899  cd chia-blockchain/
 1900  sudo apt-get install python3.7-venv python3.7-distutils python3.7-dev git lsb-release -y
 1901  python --version
 1902  python3 --version
 1903  . ./activate
 1904  sh install.sh
 1905  ls
 1906  ls -lt
 1907  ls 
 1908  ls -l
 1909  chmod +x venv/bin/activate
 1910  lsb_release -a
 1911  sudo do-release-upgrade -c
 1912  do-release-upgrade
 1913  sudo do-release-upgrade -d
 1914  sudo do-release-upgrade -h
 1915  sudo do-release-upgrade -d -f DistUpgradeViewGtk3
 1916  sudo update-manager -c
 1917  sudo update-manager -c -d
 1918  sudo /usr/lib/ubuntu-release-upgrader/check-new-release-gtk
 1919  sudo do-release-upgrade -d
 1920  sudo apt update && sudo apt upgrade
 1921  sudo reboot command
 1922  sudo apt install update-manager-core
 1923  sudo do-release-upgrade
 1924  sudo do-release-upgrade -d -f DistUpgradeViewGtk3
 1925  sudo update-manager -c -d
 1926  sudo do-release-upgrade -c
 1927  sudo sudo do-release-upgrade -c
 1928  sudo do-release-upgrade -c
 1929  kumar@LinuxTechi:~$ cat /etc/lsb-release
 1930  cat /etc/lsb-release
 1931  sudo apt --purge autoremove
 1932  V
 1933  sudo do-release-upgrade
 1934  sudo do-release-upgrade -d
 1935  V
 1936  sudo apt install update-manager-core -y
 1937  sudo do-release-upgrade -d
 1938  pip install speedtest-cli
 1939  speedtest
 1940  speedtest-cli
 1941  pip --version
 1942  pip install speedtest-cli
 1943  sudo speedtest
 1944  sudo uninstall speedtest
 1945  pip remove speedtest
 1946  pip uninstall speedtest
 1947  pip uninstall speedtest-cli
 1948  sudo pip uninstall speedtest-cli
 1949  pip install speedtest-cli
 1950  speedtest-cli
 1951  python3 speedtest-cli
 1952  python -m speedtest-cli
 1953  speedtest
 1954  sudo apt --purge autoremove
 1955  sudo apt install update-manager-core
 1956  sudo do-release-upgrade
 1957  sudo sed -i -e 's/archive.ubuntu.com\|security.ubuntu.com/old-releases.ubuntu.com/g' /etc/apt/sources.list
 1958  sudo apt-get update
 1959  sudo apt-get install update-manager-core
 1960  sudo do-release-upgrade
 1961  sudo sed -i -e 's/archive.ubuntu.com\|security.ubuntu.com/old-releases.ubuntu.com/g' /etc/apt/sources.list
 1962  sudo sed -i -e 's/us.archive.ubuntu.com\|us.security.ubuntu.com/old-releases.ubuntu.com/g' /etc/apt/sources.list
 1963  V
 1964  sudo apt-get update
 1965  sudo apt-get upgrade
 1966  sudo apt-get dist-upgrade
 1967  sudo apt-get install update-manager-core
 1968  sudo reboot
 1969  sudo do-release-upgrade
 1970  sudo apt autoremove
 1971  sudo do-release-upgrade -d -f DistUpgradeViewGtk3
 1972  sudo apt dist-upgrade
 1973  sudo do-release-upgrade
 1974  sudo apt-get update
 1975  sudo apt-get upgrade -y
 1976  sudo apt-get dist-upgrade
 1977  sudo do-release-upgrade
 1978  ssh amirgpu@217.209.146.118
 1979  scp -r 
 1980  scp -r 217.209.146.118:/home/amir/Desktop/ordering_behav
 1981  scp -r 217.209.146.118:/home/amir/Desktop/ordering_behav/largefile.txt /home/amir/Desktop/ordering_behav
 1982  scp -r amirgpu@217.209.146.118:/home/amir/Desktop/ordering_behav/largefile.txt /home/amir/Desktop/ordering_behav
 1983  scp -r ssh amirgpu@217.209.146.118:/home/amirgpu/Desktop/OrderingData
 1984  scp -r ssh amirgpu@217.209.146.118:/home/amirgpu/Desktop/OrderingData/largefile.txt /home/amir/Desktop/ordering_behav
 1985  ls
 1986  pipenv install pandas
 1987  ls
 1988  exit
 1989  pwd
 1990  cd Desktop/
 1991  git clone https://github.com/Samalia697/Test
 1992  cd Test
 1993  touch s.py
 1994  ls
 1995  git status
 1996  git add .
 1997  git commit -m 'First commit...'
 1998  git push origin head
 1999  git push origin main
 2000  git status
 2001  git push origin master
 2002  git pull origin master
 2003  cat s.py
 2004  git log
 2005  history > git.txt
